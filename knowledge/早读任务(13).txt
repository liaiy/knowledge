day02早读任务：
1. 变量名的命名规则？(7条)
2. 掌握的数据类型转换有哪些？
	将数据转换成整型  int(数据)
	将数据转换成浮点型  float(数据)
	将数据转换成字符串  str(数据)

3.如何查询数据的类型及数据的布尔类型值？
	查询数据的类型   type(数据)
	查询数据的布尔类型值  bool(数据)

day03早读任务：
1. break和continue的异同点？
相同点
控制循环流程：break和continue都用于改变循环（如for或while）的默认执行流程。
影响迭代：它们都可以影响循环中迭代元素的数量或顺序。
不同点
终止循环：
break会立即终止最内层的循环，即使循环条件仍然为真。
continue不会终止循环，而是跳过当前迭代，并立即开始下一次迭代。
后续执行：
当break被执行后，循环将不再继续，程序将继续执行循环之后的语句。
当continue被执行后，当前迭代剩余的语句将被跳过，程序将立即开始下一次迭代。


day04早读任务：
1. 字符串概念及索引切片语法？

day05早读任务：
1.字符串方法及作用？(至少5个)
2.字符串输入函数及注意事项？
	语法：input("提示语")
	注意：input接收过来的数据一定是字符串类型的数据

day06早读任务：
1. 列表增加数据的三种方式及其作用？
2.列表删除数据的方法及作用？
3.字典循环遍历的三种方式？
	遍历字典的键
	for i in dict1.keys():
		print(i)
	遍历字典的值
	for i in dict1.values():
		print(i)
	遍历字典的键值对
	for i,j in dict1.items():
		print(i,j)

4. in 和 not in 的语法及作用？
	in：
	语法：元素 in 数据
	作用：判断元素是否在数据内存在，如果在则返回True，否则返回False
	not in：
	语法：元素 not in 数据
	作用：判断元素是否在数据内不存在，如果不在则返回True，否则返回False

5.字典增加和修改的语法格式及特点？
	语法：字典名[键] = 值
	特点：有则修改，无则增加


day07早读任务：
1.python中的内置函数有哪些，及其作用？
	sum():对序列进行求和
	len():统计序列的长度、统计序列中数据的个数
	max():返回参数的最大值
	min():返回参数的最小值
	del():删除指定数据

2.python中可变不可变数据类型有哪些？
	可变：列表、集合、字典
	不可变：数字、字符串、元组


day08早读任务：
1.对全局变量和局部变量的理解：
	全局变量：定义在函数外，在函数外和函数内都能使用的变量，全局变量的生命周期是整个程序的运行期间，也就是说只要程序没有结束运行，全局变量就会一直存在。
​	局部变量：定义在函数内，只能在函数内使用，不能在函数外使用，局部变量的生命周期是它们所在的函数被调用时开始，到函数返回时结束。

2.拆包注意事项和可拆包的数据类型？
	拆包时需要注意：要拆的数据的个数要与变量的个数相同，否则程序会异常
	可拆包的数据类型：字符串、列表、元组、字典(拆包之后获取到的数据为字典的键)

3.对不定长参数的理解？
	加了星号（*）的变量args会存放所有未命名的变量参数，args为元组
	而加**的变量kwargs会存放命名参数，即形如key=value的参数， kwargs为字典

4.return的理解？
	return语句的主要作用是结束当前函数的执行，并返回一个值给调用该函数的代码。return语句可以出现在函数体的任何位置，一旦执行到return语句，函数就会立即终止，并将return后面跟着的值（如果有的话）返回给调用者。
这个值可以是任何Python数据类型，包括整数、浮点数、字符串、列表、字典等。如果return后面没有跟任何值，或者函数体中没有return语句，那么函数会默认返回None
 


day10早读任务：
1. 对正则模块贪婪匹配和非贪婪的理解？
	贪婪模式：正则表达式一般趋向于最大长度匹配，也就是所谓的贪婪匹配，尽可能匹配多的字符。
	非贪婪模式：匹配到结果就好，尽可能匹配少的字符，一般是通过将?号写到匹配次数之后导致

2.列举正则模块方法及作用？
	findall():匹配字符串中所有符合条件的数据，存放在列表中返回；如果没有符合条件的数据，返回一个空列表
	match():从字符串开头开始匹配；一旦匹配成功立马返回对象，匹配失败返回None；通过group方法获取匹配成功的数据，匹配失败会报错
	search():从字符串任意位置开始匹配；一旦匹配成功立马返回对象，匹配失败返回None；通过group方法获取匹配成功的数据，匹配失败会报错



day11早读任务：
1.导包的两种方式？
	import 模块名     模块名.方法名()
	from 模块名 import 方法名     方法名()

2.time模块中的方法及作用？
	time.time()：获取当前时间戳
	time.sleep(n)：阻塞程序，让程序休眠n秒

3.random模块中的方法及作用？
	random.random()：生成0-1之间的随即小数
	random.randint(a,b)：生成a-b之间的随机整除，包括a和b
	random.choice(可迭代对象)：从可迭代对象中随机抽取一个元素



day12早读任务：
1.对文件操作的理解？
	open():打开文件
	close():关闭文件
	read(n):一次性读取n个字节的数据；不指定参数n，默认读取全部
	readline():一次性读取一行数据，如果读取到空字符串，说明文件中内容读取结束
	readlines()：以列表的形式一次性读取文件中所有的内容；列表的每一项是文件的每一行
	write(数据)：往文件中写入数据，数据要求是字符串类型的数据

2.文件常用访问模式
	r：只读，默认访问方式；如果文件不存在则报错
	w：只写，如果文件不存在则创建文件；如果文件存在且有数据，则覆盖原本的数据
	a：追加，如果文件不存在则创建文件；如果文件存在且有数据，则原本数据后进行追加


day13早读任务：
1.对self和cls的理解？
	self：实例对象本身
	cls：类对象本身


2.列举python中的魔法方法及其作用：
	__new__：类的构造器，创建初始化后的基本实例对象
	__init__：类的初始化方法，给实例对象增加实例属性
	__str__：返回实例对象的描述信息
	__del__：在实例对象被销毁前被调用，释放资源


day14早读任务：
1.面向对象三要素(三大特征)：
继承：
	子类继承父类，子类拥有父类的属性和方法，提高代码的重用性
封装：
	隐藏对象的属性和实现细节，进对外提供公共访问方式；通过私有属性和私有方法实现封装
多态：
	不同的对象调用父类相同的方法，产生不同的执行结果，提供代码的灵活度
	多态存在的两个必要条件：继承和方法重写

2.实例方法、类方法、静态方法的区别：
实例方法：
	直接定义即可，第一个参数必须是实例对象self，需要实例对象进行调用；
	内部可以访问类属性(类属性通过类名.属性名的方式访问)和实例属性；
类方法：
	定义需要使用@classmethod装饰器，第一个参数必须是类对象cls，类对象和实例对象都能调用；
	内部可以访问类属性  cls.属性名的方式就可以访问
静态方法：
	定义需要使用@staticmethod装饰器，方法不携带self和cls参数，类对象和实例对象都能调用；
	内部不能访问类属性，也不能访问实例属性；只能访问自己内部的局部变量

3.多继承继承顺序的理解？
多继承就是继承2个及以上的父类，在python2和python3中继承顺序是不一样的
python3是广度优先，也就是一条路走到倒数第二级，判断如果其他路能走到终点，则返回走另一条路，如果不能则走到终点；python2是深度优先也就是一条路走到底
使用mro方法实现继承顺序的查找，用来确定在多继承情况下，子类查找父类同名属性的顺序

4.super()函数的理解
在Python中，当一个类继承自另一个类时，子类可以通过super函数调用父类的方法
super函数的作用是在子类中调用父类的方法。通过使用super函数，子类可以继承父类的行为，并且可以在子类中进行一些额外的操作
使用super函数的好处是可以避免在子类中重复编写父类的代码，提高代码的复用性。super函数还能够处理多重继承的情况，确保方法的调用顺序是按照继承顺序来的。