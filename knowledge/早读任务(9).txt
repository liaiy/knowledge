day02早读任务：
1. 变量名的命名规则？(7条)

   ```python
   1. 使用数字、字母、下划线
   2. 不能使用Python内置关键字作为变量名
   3. 见名识意，命名规范
   4. 使用大驼峰、小驼峰、下划线命名法
   5. 严格区分大小写
   6. 数字不能开头
   7. 避免单独使用字母l.o.z命名
   ```

   

2. 掌握的数据类型转换有哪些？

  ```
  1. 将数据转换成整型   int（数据）
  2. 将数据转换成浮点型  float（数据）
  3. 讲数据转换成字符串  str(数据)
  ```

3.如何查询数据的类型及数据的布尔类型值？

```
1. 查询数据的类型： type（数据）
2. 查询数据的布尔类型值：  bool(数据)
```

day03早读任务：
1. break和continue的异同点？

  ```
  相同点：
  	
  ```

  相同点
  控制循环流程：break和continue都用于改变循环（如for或while）的默认执行流程。
  影响迭代：它们都可以影响循环中迭代元素的数量或顺序。
  不同点
  终止循环：
  break会立即终止最内层的循环，即使循环条件仍然为真。
  continue不会终止循环，而是跳过当前迭代，并立即开始下一次迭代。
  后续执行：
  当break被执行后，循环将不再继续，程序将继续执行循环之后的语句。
  当continue被执行后，当前迭代剩余的语句将被跳过，程序将立即开始下一次迭代。


day04早读任务：
1. 字符串概念及索引切片语法？

   ```
   字符串： 由一系列字符组成的不可变序列容器
   	不可变：没有增删改方法。所有操作不会直接作用于原数据
   	序列：游戏的排列，支持索引和切片操作
   索引
   	语法：字符串[编号]
   切片
   	语法：字符串[开始下标：结束下标：步长] 
   ```

   

day05早读任务：
1.字符串方法及作用？(至少5个)

```

```

2.字符串输入函数及注意事项

```

```

？
	语法：input("提示语")
	注意：input接收过来的数据一定是字符串类型的数据

day06早读任务：
1. 列表增加数据的三种方式及其作用？
2.列表删除数据的方法及作用？
3.字典循环遍历的三种方式？
	遍历字典的键
	for i in dict1.keys():
		print(i)
	遍历字典的值
	for i in dict1.values():
		print(i)
	遍历字典的键值对
	for i,j in dict1.items():
		print(i,j)

4. in 和 not in 的语法及作用？
	in：
	语法：元素 in 数据
	作用：判断元素是否在数据内存在，如果在则返回True，否则返回False
	not in：
	语法：元素 not in 数据
	作用：判断元素是否在数据内不存在，如果不在则返回True，否则返回False

5.字典增加和修改的语法格式及特点？
	语法：字典名[键] = 值
	特点：有则修改，无则增加


day07早读任务：
1.python中的内置函数有哪些，及其作用？
	sum():对序列进行求和
	len():统计序列的长度、统计序列中数据的个数
	max():返回参数的最大值
	min():返回参数的最小值
	del():删除指定数据

2.python中可变不可变数据类型有哪些？
	可变：列表、集合、字典
	不可变：数字、字符串、元组


day08早读任务：
1.对全局变量和局部变量的理解：
全局变量：定义在函数外，在函数外和函数内都能使用的变量，全局变量的生命周期是整个程序的运行期间，也就是说只要程序没有结束运行，全局变量就会一直存在。
​局部变量：定义在函数内，只能在函数内使用，不能在函数外使用，局部变量的生命周期是它们所在的函数被调用时开始，到函数返回时结束。

2.拆包注意事项和可拆包的数据类型？
	拆包时需要注意：要拆的数据的个数要与变量的个数相同，否则程序会异常
	可拆包的数据类型：字符串、列表、元组、字典(拆包之后获取到的数据为字典的键)

3.对不定长参数的理解？
	加了星号（*）的变量args会存放所有未命名的变量参数，args为元组
	而加**的变量kwargs会存放命名参数，即形如key=value的参数， kwargs为字典

4.return的理解？
	return语句的主要作用是结束当前函数的执行，并返回一个值给调用该函数的代码。return语句可以出现在函数体的任何位置，一旦执行到return语句，函数就会立即终止，并将return后面跟着的值（如果有的话）返回给调用者。
这个值可以是任何Python数据类型，包括整数、浮点数、字符串、列表、字典等。如果return后面没有跟任何值，或者函数体中没有return语句，那么函数会默认返回None
